// Generated by CoffeeScript 1.6.2
(function() {
  var PoolParty,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  PoolParty = (function() {
    /*
    */
    function PoolParty(options) {
      if (options == null) {
        options = {};
      }
      this.drip = __bind(this.drip, this);
      this.max = options.max || 50;
      this.min = options.min || 0;
      this.staleTimeout = options.staleTimeout || 1000;
      this.factory = options.factory;
      this.recycle = options.recycle;
      this._pool = [];
      this._size = 0;
    }

    /*
    */


    PoolParty.prototype.size = function() {
      return this._size;
    };

    /*
    */


    PoolParty.prototype.drain = function() {
      var i, _i, _ref, _results;

      _results = [];
      for (i = _i = 0, _ref = this._size - this.min; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(this.drip());
      }
      return _results;
    };

    /*
    */


    PoolParty.prototype.drip = function() {
      this._dripping = false;
      if (!this._size) {
        return;
      }
      this._size--;
      this._pool.shift();
      return this._timeoutDrip();
    };

    /*
    */


    PoolParty.prototype.create = function(options) {
      var item;

      if (this._size) {
        this._size--;
        item = this._pool.shift();
        this.recycle(item, options);
        return item;
      }
      item = this.factory(options);
      item.__pool = this;
      return item;
    };

    /*
    */


    PoolParty.prototype.add = function(object) {
      if (object.__pool !== this) {
        return this;
      }
      if (!~this._pool.indexOf(object) && this._size < this.max) {
        this._size++;
        this._pool.push(object);
        this._timeoutDrip();
      }
      return this;
    };

    /*
    */


    PoolParty.prototype._timeoutDrip = function() {
      if (this._dripping) {
        return;
      }
      this._dripping = true;
      return setTimeout(this.drip, this.staleTimeout);
    };

    return PoolParty;

  })();

  module.exports = function(options) {
    return new PoolParty(options);
  };

}).call(this);
